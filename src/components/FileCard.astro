---
import { data } from "../scripts/seed.ts";
const { cardType } = Astro.props;
---

<div
  class={`card ${cardType === "upload" ? "cardUpload" : cardType === "download" ? "cardDownload" : null}`}
>
  <ul
    id={cardType === "upload"
      ? "fileListUpload"
      : cardType === "download"
        ? "fileListDownload"
        : null}
  >
  </ul>
  <div
    class={cardType === "upload"
      ? "buttonWrapperUpload"
      : "buttonWrapperDownload"}
  >
    <button class="clearbutton">clear</button>
    {
      cardType === "download" ? (
        <button class="qrLinkButton">qr/link</button>
      ) : null
    }
    <button class="uploadButton">upload</button>
  </div>

  <style>
    .card {
      background: var(--dark-blue2);
      border-radius: var(--border-radius1);
      width: var(--card-width);
      max-width: var(--card-max-width);
      height: var(--card-height);

      justify-self: center;
      display: grid;
      grid-template-rows: 3fr 1fr;
      padding: 1rem 1.1rem;
    }

    ul {
      display: grid;
      grid-template-columns: 1fr 1fr;
      overflow-y: auto;
      /* border: 1px solid blue; */
      gap: 0.8rem;
    }

    :global(.fileListItem) {
      display: flex;
      height: 1.4rem;
      align-items: center;
      margin-left: 7px;
      width: 100%;
      border-radius: var(--border-radius1);
      background-color: var(--white1);
    }

    :global(.checkbox) {
      /* appearance: none; */
      /* width: 1rem; */
      /* height: 1rem; */
      /* background-color: none; */
      /* border: 2px solid white; */
      /* align-self: center; */
    }

    :global(.checkbox:checked) {
      background-color: var(--green1);
    }

    :global(.fileName) {
      display: flex;
      align-items: center;
      margin-left: 7px;
      width: 100%;
      border-radius: var(--border-radius1);
      background-color: var(--white1);
    }

    .buttonWrapperUpload {
      display: grid;
      grid-template-columns: 1fr 1.3fr;
    }
    .buttonWrapperDownload {
      display: grid;
      grid-template-columns: 0.6fr 1.1fr 1.1fr;
      gap: 0.7rem;
    }

    button {
      border: none;
      text-align: center;
      text-decoration: none;
      cursor: pointer;
      font-size: 1.2rem;
      border-radius: var(--border-radius1);
      height: 1.8rem;
      position: relative;
      top: 1rem;
    }

    .clearbutton {
      max-width: 5rem;
      background-color: var(--red1);
    }

    .qrLinkButton {
      background-color: var(--yellow1);
    }

    .uploadButton {
      background-color: var(--green1);
    }

    @media (min-width: 800px) {
      .card {
        border: 2px solid white;
        max-width: var(--card-max-width);
        width: var(--card-width-desktop);
        height: var(--card-height-desktop);
      }
      .cardUpload {
      }
      .cardDownload {
      }
    }
  </style>

  <script>
    import { getFiles, subscribe } from "../scripts/store.ts";

    document.addEventListener("DOMContentLoaded", () => {
      const fileList = document.getElementById("fileListUpload");

      function updateFileList(files: File[]) {
        if (fileList) {
          if (files.length > 0) {
            files.forEach((file: { name: string }) => {
              const li = document.createElement("li");
              li.className = "fileListItem";

              const span = document.createElement("span");
              span.className = "fileName";
              span.textContent = file.name;

              const checkbox = document.createElement("input");
              checkbox.className = "checkbox";
              checkbox.type = "checkbox";

              li.appendChild(checkbox);
              li.appendChild(span);
              fileList.appendChild(li);
            });
          }
        }
      }

      // Initial load
      updateFileList(getFiles());

      // Subscribe to changes
      subscribe(updateFileList);
    });
  </script>
</div>
